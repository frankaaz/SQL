#This data set was created to show the use of JOIN statements between 2 tables and how JOIN stament can also be used join a table with itself.

CREATE TABLE movie_star (id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    age INTEGER);
    
INSERT INTO movie_star (name, age) VALUES ("Brad Pitt", 50);
INSERT INTO movie_star (name, age) VALUES ("Al Pacino", 60);
INSERT INTO movie_star (name, age) VALUES ("Nicole Kidman", 55);
INSERT INTO movie_star (name, age) VALUES ("Tom Cruise", 58);
INSERT INTO movie_star (name, age) VALUES ("Jim Carry", 52);
INSERT INTO movie_star (name, age) VALUES ("Tom Hanks", 66);
INSERT INTO movie_star (name, age) VALUES ("Johnny Depp", 59);
INSERT INTO movie_star (name, age) VALUES ("Leonardo DiCaprio", 48);
INSERT INTO movie_star (name, age) VALUES ("Will Smith", 54);
INSERT INTO movie_star (name, age) VALUES ("Dwayne Johnson", 51);
INSERT INTO movie_star (name, age) VALUES ("Hugh Jackman", 54);
INSERT INTO movie_star (name, age) VALUES ("Robert Downey Jr.", 58);
INSERT INTO movie_star (name, age) VALUES ("Chris Evans", 41);
INSERT INTO movie_star (name, age) VALUES ("Vin Diesel", 55);
INSERT INTO movie_star (name, age) VALUES ("Bradley Cooper", 48);
INSERT INTO movie_star (name, age) VALUES ("Daniel Craig", 55);
INSERT INTO movie_star (name, age) VALUES ("Nicolas Cage", 59);

CREATE TABLE movie_title (id INTEGER PRIMARY KEY AUTOINCREMENT,
    actor_id INTEGER,
    title TEXT);
    
INSERT INTO movie_title (actor_id, title) VALUES (3, "The Others");
INSERT INTO movie_title (actor_id, title) VALUES (5, "The Mask");
INSERT INTO movie_title (actor_id, title) VALUES (8, "The Revenant");
INSERT INTO movie_title (actor_id, title) VALUES (10, "Jumanji");
INSERT INTO movie_title (actor_id, title) VALUES (13, "Captain America");
INSERT INTO movie_title (actor_id, title) VALUES (15, "Bradley Cooper");
INSERT INTO movie_title (actor_id, title) VALUES (1, "Troy");
INSERT INTO movie_title (actor_id, title) VALUES (4, "Vanilla Sky");
INSERT INTO movie_title (actor_id, title) VALUES (6, "Cast Away");

CREATE TABLE friendship (id INTEGER PRIMARY KEY AUTOINCREMENT,
    actor1_id INTEGER,
    actor2_id INTEGER);
    
INSERT INTO friendship (actor1_id, actor2_id) VALUES (1, 8);
INSERT INTO friendship (actor1_id, actor2_id) VALUES (3, 4);
INSERT INTO friendship (actor1_id, actor2_id) VALUES (5, 9);
INSERT INTO friendship (actor1_id, actor2_id) VALUES (12, 13);

#Show the actor name and the movie title they have participated in using a LEFT JOIN.
SELECT s.name, t.title
FROM movie_star s
LEFT OUTER JOIN movie_title t ON s.id=t.actor_id;

#Utilize JOIN to get the name of actors joining their id's with their respective id's on the friendship table, twice.
SELECT a.name, b.name
FROM friendship f
JOIN movie_star a ON f.actor1_id=a.id
JOIN movie_star b ON f.actor2_id=b.id;
